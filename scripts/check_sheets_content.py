# /scripts/check_sheets_content.py

import sys
import os
sys.path.insert(0, os.path.join(os.path.dirname(__file__), '..'))

from dotenv import load_dotenv
from src.services.news.exporter import GoogleSheetsExporter

def check_sheets_content():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ Google Sheets"""
    
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ Google Sheets")
    print("=" * 50)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    env_path = os.path.join(os.path.dirname(__file__), '..', '.env')
    load_dotenv(env_path)
    
    try:
        # –°–æ–∑–¥–∞–µ–º —ç–∫—Å–ø–æ—Ä—Ç–µ—Ä –¥–ª—è TestPipeline worksheet
        exporter = GoogleSheetsExporter(worksheet_name="TestPipeline")
        print("‚úÖ –≠–∫—Å–ø–æ—Ä—Ç–µ—Ä —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        # –ü–æ–ª—É—á–∞–µ–º worksheet
        worksheet = exporter._get_worksheet()
        print(f"üìã Worksheet: {worksheet.title}")
        print(f"üìä –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫: {worksheet.row_count}")
        print(f"üìä –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–ª–æ–Ω–æ–∫: {worksheet.col_count}")
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
        all_values = worksheet.get_all_values()
        print(f"üìä –°—Ç—Ä–æ–∫ —Å –¥–∞–Ω–Ω—ã–º–∏: {len(all_values)}")
        
        if all_values:
            print(f"üìä –ó–∞–≥–æ–ª–æ–≤–∫–∏: {all_values[0]}")
            print()
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å—Ç—Ä–æ–∫
            print("üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å—Ç—Ä–æ–∫:")
            for i, row in enumerate(all_values[-10:], len(all_values) - 9):
                if len(row) > 1 and row[1]:  # –ï—Å–ª–∏ –µ—Å—Ç—å title
                    print(f"  {i:3d}: {row[0][:19]} | {row[1][:60]}...")
                else:
                    print(f"  {i:3d}: [–ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞]")
            
            print()
            
            # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –Ω–µ–ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏ (–∏—Å–∫–ª—é—á–∞—è –∑–∞–≥–æ–ª–æ–≤–∫–∏)
            non_empty_rows = 0
            for i, row in enumerate(all_values[1:], 2):  # –ù–∞—á–∏–Ω–∞–µ–º —Å 2-–π —Å—Ç—Ä–æ–∫–∏
                if len(row) > 1 and row[1]:  # –ï—Å–ª–∏ –µ—Å—Ç—å title
                    non_empty_rows += 1
            
            print(f"üìä –ù–µ–ø—É—Å—Ç—ã—Ö —Å—Ç—Ä–æ–∫ –¥–∞–Ω–Ω—ã—Ö: {non_empty_rows}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏
            print("\nüîç –ê–Ω–∞–ª–∏–∑ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö —Å—Ç—Ä–æ–∫:")
            recent_rows = []
            for i, row in enumerate(all_values[1:], 2):
                if len(row) > 1 and row[1]:
                    recent_rows.append((i, row))
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 –∑–∞–ø–∏—Å–µ–π
            for i, (row_num, row) in enumerate(recent_rows[-5:], 1):
                print(f"  {i}: –°—Ç—Ä–æ–∫–∞ {row_num}: {row[1][:60]}...")
                print(f"      Timestamp: {row[0]}")
                print(f"      URL: {row[3][:50]}...")
                print()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã
        try:
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∏–ª—å—Ç—Ä–∞—Ö
            spreadsheet = exporter._spreadsheet
            sheet_metadata = spreadsheet.get_worksheet_by_id(worksheet.id)
            print(f"üìä –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –ª–∏—Å—Ç–∞ –ø–æ–ª—É—á–µ–Ω—ã")
        except Exception as e:
            print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ: {e}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    check_sheets_content() 