#!/usr/bin/env python3
# /scripts/test_google_sheets_export.py
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —ç–∫—Å–ø–æ—Ä—Ç–∞ –≤ Google Sheets
"""

import sys
import os
from datetime import datetime, timezone
from typing import List

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ PYTHONPATH
sys.path.insert(0, os.path.join(os.path.dirname(__file__), '..'))

from src.services.news.exporter import GoogleSheetsExporter
from src.langchain.news_chain import NewsItem
from src.logger import setup_logger
from src.config import get_google_settings
from dotenv import load_dotenv


def create_test_news_items() -> List[NewsItem]:
    """–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞"""
    # –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–µ –Ω–æ–≤–æ—Å—Ç–∏
    item1 = NewsItem(
        title="Test News Article 1",
        description="This is a test news article for Google Sheets export testing",
        url="https://example.com/news/1",
        published_at=datetime.now(timezone.utc),
        source="Test Source",
        category="technology",
        language="en"
    )
    item1.relevance_score = 8.5
    item1.similarity_score = 0.0
    item1.is_duplicate = False
    item1.duplicate_of = None
    
    item2 = NewsItem(
        title="Test News Article 2",
        description="Another test news article to verify batch export functionality",
        url="https://example.com/news/2",
        published_at=datetime.now(timezone.utc),
        source="Test Source 2",
        category="business",
        language="en"
    )
    item2.relevance_score = 9.2
    item2.similarity_score = 0.0
    item2.is_duplicate = False
    item2.duplicate_of = None
    
    item3 = NewsItem(
        title="Duplicate Test Article",
        description="This is a duplicate test article",
        url="https://example.com/news/3",
        published_at=datetime.now(timezone.utc),
        source="Test Source",
        category="technology",
        language="en"
    )
    item3.relevance_score = 7.5
    item3.similarity_score = 0.95
    item3.is_duplicate = True
    item3.duplicate_of = "Test News Article 1"
    
    return [item1, item2, item3]


def test_google_sheets_export():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —ç–∫—Å–ø–æ—Ä—Ç –≤ Google Sheets"""
    logger = setup_logger(__name__)
    
    print("=" * 60)
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –≠–ö–°–ü–û–†–¢–ê –í GOOGLE SHEETS")
    print("=" * 60)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    load_dotenv()
    
    # –î–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π –ø—É—Ç—å
    local_service_account_path = ".config/google_service_account.json"
    if os.path.exists(local_service_account_path):
        os.environ['GOOGLE_SERVICE_ACCOUNT_PATH'] = local_service_account_path
        print(f"üîß –ò—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π service account: {local_service_account_path}")
    
        # –û—á–∏—â–∞–µ–º –∫—ç—à –Ω–∞—Å—Ç—Ä–æ–µ–∫, —á—Ç–æ–±—ã –ø–æ–¥—Ö–≤–∞—Ç–∏—Ç—å –Ω–æ–≤—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
        get_google_settings.cache_clear()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
    required_vars = [
        'GOOGLE_SHEET_ID',
        'GOOGLE_SERVICE_ACCOUNT_PATH'
    ]
    
    missing_vars = []
    for var in required_vars:
        if not os.getenv(var):
            missing_vars.append(var)
    
    if missing_vars:
        print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è: {', '.join(missing_vars)}")
        return False
    
    print("‚úÖ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞–π–¥–µ–Ω—ã")
    
    try:
        # –°–æ–∑–¥–∞–µ–º —ç–∫—Å–ø–æ—Ä—Ç–µ—Ä
        print("\nüìä –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫—Å–ø–æ—Ä—Ç–µ—Ä–∞ Google Sheets...")
        
        # –ü–æ–ª—É—á–∞–µ–º ID —Ç–∞–±–ª–∏—Ü—ã –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
        spreadsheet_id = os.getenv('GOOGLE_SHEET_ID')
        
        # –°–æ–∑–¥–∞—ë–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —ç–∫—Å–ø–æ—Ä—Ç–µ—Ä —Å –ø—Ä—è–º—ã–º —É–∫–∞–∑–∞–Ω–∏–µ–º –Ω–∞—Å—Ç—Ä–æ–µ–∫
        from src.config import GoogleSettings
        
        # –°–æ–∑–¥–∞—ë–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å –ª–æ–∫–∞–ª—å–Ω—ã–º –ø—É—Ç—ë–º
        google_settings = GoogleSettings(
            GOOGLE_SHEET_ID=spreadsheet_id,
            GOOGLE_SERVICE_ACCOUNT_PATH=os.getenv('GOOGLE_SERVICE_ACCOUNT_PATH'),
            GOOGLE_ACCOUNT_EMAIL=os.getenv('GOOGLE_ACCOUNT_EMAIL', ''),
            GOOGLE_ACCOUNT_KEY=os.getenv('GOOGLE_ACCOUNT_KEY', '')
        )
        
        # –°–æ–∑–¥–∞—ë–º —ç–∫—Å–ø–æ—Ä—Ç–µ—Ä –±–µ–∑ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–ª–∏–µ–Ω—Ç–∞
        exporter = GoogleSheetsExporter.__new__(GoogleSheetsExporter)
        exporter.worksheet_name = "–õ–∏—Å—Ç1"  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ª–∏—Å—Ç
        exporter.max_retries = 3
        exporter.retry_delay = 1.0
        exporter._logger = None
        exporter._client = None
        exporter._spreadsheet = None
        exporter._worksheet = None
        exporter.settings = google_settings
        exporter.spreadsheet_id = spreadsheet_id
        
        # –¢–µ–ø–µ—Ä—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–ª–∏–µ–Ω—Ç —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
        exporter._setup_client()
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        print("üìù –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π...")
        test_news = create_test_news_items()
        print(f"   –°–æ–∑–¥–∞–Ω–æ {len(test_news)} —Ç–µ—Å—Ç–æ–≤—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π")
        
        # –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
        print("\nüöÄ –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –≤ Google Sheets...")
        success = exporter.export_news(test_news, append=True)
        
        if success:
            print("‚úÖ –≠–∫—Å–ø–æ—Ä—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
            
            # –ü–æ–ª—É—á–∞–µ–º —Å–≤–æ–¥–∫—É
            summary = exporter.get_export_summary()
            print(f"üìà –°–≤–æ–¥–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞:")
            print(f"   üìä –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: {summary['data_rows']}")
            print(f"   üìã –õ–∏—Å—Ç: {summary['worksheet_name']}")
            print(f"   üîó ID —Ç–∞–±–ª–∏—Ü—ã: {summary['spreadsheet_id']}")
            print(f"   ‚è∞ –ü–æ—Å–ª–µ–¥–Ω–∏–π —ç–∫—Å–ø–æ—Ä—Ç: {summary['last_updated']}")
        
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—ã–π —ç–∫—Å–ø–æ—Ä—Ç (append)
            print("\nüîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ —ç–∫—Å–ø–æ—Ä—Ç–∞ (append)...")
            additional_item_obj = NewsItem(
                title="Additional Test Article",
                description="This article tests append functionality",
                url="https://example.com/news/4",
                published_at=datetime.now(timezone.utc),
                source="Append Test Source",
                category="test",
                language="en"
            )
            additional_item_obj.relevance_score = 8.8
            additional_item_obj.similarity_score = 0.0
            additional_item_obj.is_duplicate = False
            additional_item_obj.duplicate_of = None
            
            additional_item = [additional_item_obj]
            
            append_success = exporter.export_news(additional_item, append=True)
            if append_success:
                print("‚úÖ –ü–æ–≤—Ç–æ—Ä–Ω—ã–π —ç–∫—Å–ø–æ—Ä—Ç (append) –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
            else:
                print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º —ç–∫—Å–ø–æ—Ä—Ç–µ")
                
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ –¥–∞–Ω–Ω—ã—Ö")
            return False
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {str(e)}")
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {str(e)}")
        return False
    
    print("\n" + "=" * 60)
    print("üéâ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–ï–®–ù–û!")
    print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Google Sheets —Ç–∞–±–ª–∏—Ü—É –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö")
    print("=" * 60)
    
    return True


if __name__ == "__main__":
    success = test_google_sheets_export()
    sys.exit(0 if success else 1) 