# /scripts/debug_sheets_export.py

import sys
import os
sys.path.insert(0, os.path.join(os.path.dirname(__file__), '..'))

from datetime import datetime, timezone
from src.services.news.exporter import GoogleSheetsExporter
from src.langchain.news_chain import NewsItem

def debug_sheets_export():
    """–û—Ç–ª–∞–¥–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ –≤ Google Sheets"""
    
    print("üîç –û—Ç–ª–∞–¥–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ –≤ Google Sheets")
    print("=" * 50)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    from dotenv import load_dotenv
    env_path = os.path.join(os.path.dirname(__file__), '..', '.env')
    load_dotenv(env_path)
    print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ {env_path}")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    test_items = []
    for i in range(3):
        item = NewsItem(
            title=f"Test Article {i+1}",
            description=f"Description for test article {i+1}",
            url=f"https://example.com/article{i+1}",
            published_at=datetime.now(timezone.utc),
            source="test-source",
            category="test",
            language="en",
            image_url=f"https://example.com/image{i+1}.jpg",
            uuid=f"test-uuid-{i+1}",
            keywords=f"keyword{i+1}",
            snippet=f"Snippet for article {i+1}"
        )
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
        item.relevance_score = 5.0
        item.similarity_score = 0.0
        item.is_duplicate = False
        item.duplicate_of = None
        test_items.append(item)
    
    print(f"üìä –°–æ–∑–¥–∞–Ω–æ {len(test_items)} —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å—Ç–∞—Ç–µ–π")
    
    # –°–æ–∑–¥–∞–µ–º —ç–∫—Å–ø–æ—Ä—Ç–µ—Ä
    try:
        exporter = GoogleSheetsExporter(worksheet_name="DebugTest")
        print("‚úÖ –≠–∫—Å–ø–æ—Ä—Ç–µ—Ä —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        # –ü–æ–ª—É—á–∞–µ–º worksheet –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        worksheet = exporter._get_worksheet()
        print(f"üìã Worksheet: {worksheet.title}")
        print(f"üìä –°—Ç—Ä–æ–∫ –¥–æ —ç–∫—Å–ø–æ—Ä—Ç–∞: {worksheet.row_count}")
        
        # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        rows_data = exporter._prepare_export_data(test_items)
        print(f"üìä –ü–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–æ —Å—Ç—Ä–æ–∫ –¥–∞–Ω–Ω—ã—Ö: {len(rows_data)}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—É—é —Å—Ç—Ä–æ–∫—É –¥–∞–Ω–Ω—ã—Ö
        if rows_data:
            print(f"üîç –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞: {rows_data[0][:5]}...")  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5 –ø–æ–ª–µ–π
        
        # –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º
        print("\nüöÄ –ó–∞–ø—É—Å–∫ —ç–∫—Å–ø–æ—Ä—Ç–∞...")
        success = exporter.export_news(test_items, append=True)
        
        if success:
            print("‚úÖ –≠–∫—Å–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            worksheet = exporter._get_worksheet()  # –û–±–Ω–æ–≤–ª—è–µ–º worksheet
            print(f"üìä –°—Ç—Ä–æ–∫ –ø–æ—Å–ª–µ —ç–∫—Å–ø–æ—Ä—Ç–∞: {worksheet.row_count}")
            
            # –ß–∏—Ç–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏
            try:
                all_values = worksheet.get_all_values()
                print(f"üìä –í—Å–µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏–π –≤ —Ç–∞–±–ª–∏—Ü–µ: {len(all_values)}")
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 —Å—Ç—Ä–æ–∫
                if len(all_values) > 1:
                    print("\nüìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ:")
                    for i, row in enumerate(all_values[-5:], 1):
                        print(f"  {i}: {row[1][:50]}...")  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º title (2-—è –∫–æ–ª–æ–Ω–∫–∞)
                
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")
        else:
            print("‚ùå –≠–∫—Å–ø–æ—Ä—Ç –Ω–µ —É–¥–∞–ª—Å—è")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    debug_sheets_export() 