# scripts/debug_thenewsapi.py
"""
–û—Ç–ª–∞–¥–æ—á–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ TheNewsAPI
"""
import sys
import os
import json
from datetime import datetime, timedelta
sys.path.insert(0, os.path.join(os.path.dirname(__file__), '..'))

from src.services.news.fetchers.thenewsapi_com import TheNewsAPIFetcher
from src.config import get_settings


def debug_api_calls():
    """–û—Ç–ª–∞–¥–∫–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –≤—ã–∑–æ–≤–æ–≤ API"""
    print("üîç –û—Ç–ª–∞–¥–∫–∞ TheNewsAPI")
    print("=" * 50)
    
    # –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    settings = get_settings()
    
    if not settings.THENEWSAPI_API_TOKEN:
        print("‚ùå THENEWSAPI_API_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö")
        return
    
    # –°–æ–∑–¥–∞–µ–º fetcher
    fetcher = TheNewsAPIFetcher(settings.THENEWSAPI_API_TOKEN)
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å –±–µ–∑ —Ñ–∏–ª—å—Ç—Ä–æ–≤
    print("\n1Ô∏è‚É£ –¢–µ—Å—Ç: –ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å –±–µ–∑ —Ñ–∏–ª—å—Ç—Ä–æ–≤")
    print("-" * 40)
    
    try:
        result = fetcher.fetch_all_news(
            language="en",
            limit=5
        )
        
        if "error" in result:
            print(f"‚ùå –û—à–∏–±–∫–∞: {result['error']}")
        else:
            articles = result.get("data", [])
            print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ —Å—Ç–∞—Ç–µ–π: {len(articles)}")
            if articles:
                print(f"   –ü–µ—Ä–≤–∞—è —Å—Ç–∞—Ç—å—è: {articles[0].get('title', 'No title')[:50]}...")
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
    
    # –¢–µ—Å—Ç 2: –ó–∞–ø—Ä–æ—Å —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
    print("\n2Ô∏è‚É£ –¢–µ—Å—Ç: –ó–∞–ø—Ä–æ—Å —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏")
    print("-" * 40)
    
    try:
        result = fetcher.fetch_all_news(
            language="en",
            categories="tech,business",
            limit=5
        )
        
        if "error" in result:
            print(f"‚ùå –û—à–∏–±–∫–∞: {result['error']}")
        else:
            articles = result.get("data", [])
            print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ —Å—Ç–∞—Ç–µ–π: {len(articles)}")
            if articles:
                print(f"   –ü–µ—Ä–≤–∞—è —Å—Ç–∞—Ç—å—è: {articles[0].get('title', 'No title')[:50]}...")
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
    
    # –¢–µ—Å—Ç 3: –ó–∞–ø—Ä–æ—Å —Å –ø–æ–∏—Å–∫–æ–º
    print("\n3Ô∏è‚É£ –¢–µ—Å—Ç: –ó–∞–ø—Ä–æ—Å —Å –ø–æ–∏—Å–∫–æ–º")
    print("-" * 40)
    
    try:
        result = fetcher.fetch_all_news(
            search="artificial intelligence",
            language="en",
            limit=5
        )
        
        if "error" in result:
            print(f"‚ùå –û—à–∏–±–∫–∞: {result['error']}")
        else:
            articles = result.get("data", [])
            print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ —Å—Ç–∞—Ç–µ–π: {len(articles)}")
            if articles:
                print(f"   –ü–µ—Ä–≤–∞—è —Å—Ç–∞—Ç—å—è: {articles[0].get('title', 'No title')[:50]}...")
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
    
    # –¢–µ—Å—Ç 4: –ó–∞–ø—Ä–æ—Å —Å –¥–∞—Ç–æ–π (–∫–∞–∫ –≤ fetch_news)
    print("\n4Ô∏è‚É£ –¢–µ—Å—Ç: –ó–∞–ø—Ä–æ—Å —Å –≤—á–µ—Ä–∞—à–Ω–µ–π –¥–∞—Ç–æ–π")
    print("-" * 40)
    
    yesterday = (datetime.now() - timedelta(days=1)).strftime("%Y-%m-%d")
    print(f"   –î–∞—Ç–∞: {yesterday}")
    
    try:
        result = fetcher.fetch_all_news(
            language="en",
            categories="general,politics,tech,business",
            published_after=yesterday,
            limit=5
        )
        
        if "error" in result:
            print(f"‚ùå –û—à–∏–±–∫–∞: {result['error']}")
        else:
            articles = result.get("data", [])
            print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ —Å—Ç–∞—Ç–µ–π: {len(articles)}")
            if articles:
                print(f"   –ü–µ—Ä–≤–∞—è —Å—Ç–∞—Ç—å—è: {articles[0].get('title', 'No title')[:50]}...")
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
    
    # –¢–µ—Å—Ç 5: –ó–∞–ø—Ä–æ—Å —Å –±–æ–ª—å—à–∏–º –≤—Ä–µ–º–µ–Ω–Ω—ã–º –¥–∏–∞–ø–∞–∑–æ–Ω–æ–º
    print("\n5Ô∏è‚É£ –¢–µ—Å—Ç: –ó–∞–ø—Ä–æ—Å –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π")
    print("-" * 40)
    
    week_ago = (datetime.now() - timedelta(days=7)).strftime("%Y-%m-%d")
    print(f"   –î–∞—Ç–∞: {week_ago}")
    
    try:
        result = fetcher.fetch_all_news(
            language="en",
            categories="tech",
            published_after=week_ago,
            limit=5
        )
        
        if "error" in result:
            print(f"‚ùå –û—à–∏–±–∫–∞: {result['error']}")
        else:
            articles = result.get("data", [])
            print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ —Å—Ç–∞—Ç–µ–π: {len(articles)}")
            if articles:
                print(f"   –ü–µ—Ä–≤–∞—è —Å—Ç–∞—Ç—å—è: {articles[0].get('title', 'No title')[:50]}...")
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
    
    # –¢–µ—Å—Ç 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
    print("\n6Ô∏è‚É£ –¢–µ—Å—Ç: –ü–æ–ª—É—á–µ–Ω–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤")
    print("-" * 40)
    
    try:
        result = fetcher.get_sources(
            language="en",
            categories="tech"
        )
        
        if "error" in result:
            print(f"‚ùå –û—à–∏–±–∫–∞: {result['error']}")
        else:
            sources = result.get("data", [])
            print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤: {len(sources)}")
            if sources:
                print(f"   –ü–µ—Ä–≤—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫: {sources[0].get('name', 'No name')}")
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
    
    # –¢–µ—Å—Ç 7: –¢–µ—Å—Ç –º–µ—Ç–æ–¥–∞ fetch_news (–∫–∞–∫ –≤ pipeline)
    print("\n7Ô∏è‚É£ –¢–µ—Å—Ç: –ú–µ—Ç–æ–¥ fetch_news (–∫–∞–∫ –≤ pipeline)")
    print("-" * 40)
    
    try:
        result = fetcher.fetch_news(
            query="artificial intelligence",
            categories="tech,business",
            language="en",
            limit=5
        )
        
        if "error" in result:
            print(f"‚ùå –û—à–∏–±–∫–∞: {result['error']}")
        else:
            articles = result.get("articles", [])
            print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ —Å—Ç–∞—Ç–µ–π: {len(articles)}")
            if articles:
                print(f"   –ü–µ—Ä–≤–∞—è —Å—Ç–∞—Ç—å—è: {articles[0].get('title', 'No title')[:50]}...")
                print(f"   –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {articles[0].get('category', 'No category')}")
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")


def test_raw_api_call():
    """–¢–µ—Å—Ç –ø—Ä—è–º–æ–≥–æ –≤—ã–∑–æ–≤–∞ API"""
    print("\nüåê –¢–µ—Å—Ç –ø—Ä—è–º–æ–≥–æ –≤—ã–∑–æ–≤–∞ API")
    print("=" * 50)
    
    import requests
    
    settings = get_settings()
    
    if not settings.THENEWSAPI_API_TOKEN:
        print("‚ùå THENEWSAPI_API_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö")
        return
    
    # –ü—Ä—è–º–æ–π –≤—ã–∑–æ–≤ API
    url = "https://api.thenewsapi.com/v1/news/all"
    params = {
        "api_token": settings.THENEWSAPI_API_TOKEN,
        "language": "en",
        "limit": 3
    }
    
    try:
        print(f"üì° –ó–∞–ø—Ä–æ—Å: {url}")
        print(f"üìã –ü–∞—Ä–∞–º–µ—Ç—Ä—ã: {json.dumps(params, indent=2)}")
        
        response = requests.get(url, params=params, timeout=30)
        
        print(f"üìä –°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"üìä Headers: {dict(response.headers)}")
        
        if response.status_code == 200:
            data = response.json()
            print(f"üìä –û—Ç–≤–µ—Ç: {json.dumps(data, indent=2)[:500]}...")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")
            
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")


if __name__ == "__main__":
    debug_api_calls()
    test_raw_api_call() 